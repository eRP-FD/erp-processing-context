Checks: >-
  *,
  -abseil-string-find-startswith,
  -altera-struct-pack-align,
  -android-*,
  -cert-dcl16-c,
  -cert-dcl50-cpp,
  -cert-dcl59-cpp,
  -cert-env33-c,
  -cert-err58-cpp,
  -clang-analyzer-*,
  -clang-diagnostic-*,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-special-member-functions,
  -fuchsia-*,
  -google-*,
  google-runtime-operator,
  -hicpp-avoid-c-arrays,
  -hicpp-avoid-goto,
  -hicpp-braces-around-statements,
  -hicpp-function-size,
  -hicpp-named-parameter,
  -hicpp-no-array-decay,
  -hicpp-no-assembler,
  -hicpp-no-malloc,
  -hicpp-signed-bitwise,
  -hicpp-special-member-functions,
  -hicpp-uppercase-literal-suffix,
  -hicpp-use-auto,
  -hicpp-vararg,
  -llvm-*,
  -llvmlibc-*,
  -misc-bool-pointer-implicit-conversion,
  -misc-definitions-in-headers,
  -misc-include-cleaner,
  -misc-non-private-member-variables-in-classes,
  -misc-unused-alias-decls,
  -misc-unused-parameters,
  -misc-unused-using-decls,
  -modernize-avoid-c-arrays,
  -modernize-redundant-void-arg,
  -modernize-use-auto,
  -modernize-use-default-member-init,
  -modernize-use-trailing-return-type,
  -modernize-use-nodiscard,
  -modernize-use-using,
  -objc-*,
  -openmp-exception-escape,
  -readability-avoid-const-params-in-decls,
  -readability-braces-around-statements,
  -readability-else-after-return,
  -readability-function-size,
  -readability-implicit-bool-conversion,
  -readability-isolate-declaration,
  -readability-magic-numbers,
  -readability-misleading-indentation,
  -readability-named-parameter,
  -readability-redundant-member-init,
  -readability-redundant-preprocessor,
  -readability-simplify-boolean-expr,
  -readability-uppercase-literal-suffix,
  -zircon-*,
  -altera-unroll-loops,
  -readability-convert-member-functions-to-static,
  -hicpp-explicit-conversions,
  -google-explicit-constructor,
  -readability-identifier-naming,
  -bugprone-easily-swappable-parameters,
  -abseil-string-find-str-contains,
  -altera-id-dependent-backward-branch,
  -readability-suspicious-call-argument,
  -modernize-pass-by-value,
  -modernize-raw-string-literal,
  -readability-inconsistent-declaration-parameter-name,
  -readability-identifier-length,
  -bugprone-unchecked-optional-access,
  -modernize-concat-nested-namespaces,
  -readability-container-contains,
  -modernize-return-braced-init-list,
  -readability-make-member-function-const,
  -misc-const-correctness,
  -hicpp-use-override,
  -modernize-use-override,
  -cert-dcl58-cpp,
  -readability-use-anyofallof,
  -performance-enum-size,    
  -cppcoreguidelines-avoid-const-or-ref-data-members,
  -bugprone-crtp-constructor-accessibility,
  -readability-redundant-inline-specifier,
  -modernize-use-designated-initializers,
  -cppcoreguidelines-rvalue-reference-param-not-moved,
  -cppcoreguidelines-avoid-do-while,
  -readability-avoid-nested-conditional-operator,
  -performance-avoid-endl,
  -readability-math-missing-parentheses,
  -misc-use-internal-linkage,
  -misc-use-anonymous-namespace
HeaderFilterRegex: '(src|test)/.*'
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,             value: camelBack  }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: aNy_CasE   }
  - { key: readability-identifier-naming.MemberCase,               value: camelBack  }
  - { key: readability-identifier-naming.NamespaceCase,            value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,            value: camelBack  }
  - { key: readability-identifier-naming.PrivateMemberPrefix,      value: m          }
  - { key: readability-identifier-naming.StructCase,               value: CamelCase  }
  - { key: readability-identifier-naming.TypedefCase,              value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,             value: aNy_CasE   }
  - { key: readability-function-cognitive-complexity.Threshold,    value: 20         }
  - { key: readability-identifier-naming.TypedefCase,              value: CamelCase  }
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: true       }
