/*
 * (C) Copyright IBM Deutschland GmbH 2021
 * (C) Copyright IBM Corp. 2021
 */


BEGIN;

CALL erp.expect_version('2');
CALL erp.set_version('3');


ALTER TABLE erp.auditevent ADD COLUMN IF NOT EXISTS prescription_type smallint DEFAULT 160;


ALTER TABLE erp.communication ADD COLUMN IF NOT EXISTS prescription_type smallint NOT NULL DEFAULT 160;


--
-- Name: task_169; Type: TABLE; Schema: erp; Owner: -
--

CREATE TABLE IF NOT EXISTS erp.task_169 (
    prescription_id bigint NOT NULL,
    kvnr bytea,
    kvnr_hashed bytea,
    last_modified timestamp with time zone DEFAULT CURRENT_TIMESTAMP::timestamp with time zone NOT NULL,
    authored_on timestamp with time zone DEFAULT CURRENT_TIMESTAMP::timestamp with time zone NOT NULL,
    expiry_date date,
    accept_date date,
    status smallint NOT NULL,
    task_key_blob_id integer,
    salt bytea,
    access_code bytea,
    secret bytea,
    healthcare_provider_prescription bytea,
    receipt bytea,
    when_handed_over timestamp with time zone,
    when_prepared timestamp with time zone,
    performer bytea,
    medication_dispense_blob_id integer,
    medication_dispense_bundle bytea
)
PARTITION BY RANGE (prescription_id);
ALTER TABLE erp.task_169 ALTER COLUMN kvnr SET STORAGE PLAIN;
ALTER TABLE erp.task_169 ALTER COLUMN kvnr_hashed SET STORAGE PLAIN;
ALTER TABLE erp.task_169 ALTER COLUMN salt SET STORAGE PLAIN;
ALTER TABLE erp.task_169 ALTER COLUMN access_code SET STORAGE PLAIN;
ALTER TABLE erp.task_169 ALTER COLUMN secret SET STORAGE PLAIN;
ALTER TABLE erp.task_169 ALTER COLUMN performer SET STORAGE PLAIN;

CREATE TABLE IF NOT EXISTS erp.task_169000005000000 PARTITION OF erp.task_169 FOR VALUES FROM (0) TO (5000000);
CREATE TABLE IF NOT EXISTS erp.task_169000010000000 PARTITION OF erp.task_169 FOR VALUES FROM (5000000) TO (10000000);
CREATE TABLE IF NOT EXISTS erp.task_169000015000000 PARTITION OF erp.task_169 FOR VALUES FROM (10000000) TO (15000000);
CREATE TABLE IF NOT EXISTS erp.task_169000020000000 PARTITION OF erp.task_169 FOR VALUES FROM (15000000) TO (20000000);
CREATE TABLE IF NOT EXISTS erp.task_169000025000000 PARTITION OF erp.task_169 FOR VALUES FROM (20000000) TO (25000000);
CREATE TABLE IF NOT EXISTS erp.task_169000030000000 PARTITION OF erp.task_169 FOR VALUES FROM (25000000) TO (30000000);
CREATE TABLE IF NOT EXISTS erp.task_169000035000000 PARTITION OF erp.task_169 FOR VALUES FROM (30000000) TO (35000000);
CREATE TABLE IF NOT EXISTS erp.task_169000040000000 PARTITION OF erp.task_169 FOR VALUES FROM (35000000) TO (40000000);
CREATE TABLE IF NOT EXISTS erp.task_169000045000000 PARTITION OF erp.task_169 FOR VALUES FROM (40000000) TO (45000000);
CREATE TABLE IF NOT EXISTS erp.task_169000050000000 PARTITION OF erp.task_169 FOR VALUES FROM (45000000) TO (50000000);
CREATE TABLE IF NOT EXISTS erp.task_169000055000000 PARTITION OF erp.task_169 FOR VALUES FROM (50000000) TO (55000000);
CREATE TABLE IF NOT EXISTS erp.task_169000060000000 PARTITION OF erp.task_169 FOR VALUES FROM (55000000) TO (60000000);
CREATE TABLE IF NOT EXISTS erp.task_169000065000000 PARTITION OF erp.task_169 FOR VALUES FROM (60000000) TO (65000000);
CREATE TABLE IF NOT EXISTS erp.task_169000070000000 PARTITION OF erp.task_169 FOR VALUES FROM (65000000) TO (70000000);
CREATE TABLE IF NOT EXISTS erp.task_169000075000000 PARTITION OF erp.task_169 FOR VALUES FROM (70000000) TO (75000000);
CREATE TABLE IF NOT EXISTS erp.task_169000080000000 PARTITION OF erp.task_169 FOR VALUES FROM (75000000) TO (80000000);
CREATE TABLE IF NOT EXISTS erp.task_169000085000000 PARTITION OF erp.task_169 FOR VALUES FROM (80000000) TO (85000000);
CREATE TABLE IF NOT EXISTS erp.task_169000090000000 PARTITION OF erp.task_169 FOR VALUES FROM (85000000) TO (90000000);
CREATE TABLE IF NOT EXISTS erp.task_169000095000000 PARTITION OF erp.task_169 FOR VALUES FROM (90000000) TO (95000000);
CREATE TABLE IF NOT EXISTS erp.task_169000100000000 PARTITION OF erp.task_169 FOR VALUES FROM (95000000) TO (100000000);
CREATE TABLE IF NOT EXISTS erp.task_169000105000000 PARTITION OF erp.task_169 FOR VALUES FROM (100000000) TO (105000000);
CREATE TABLE IF NOT EXISTS erp.task_169000110000000 PARTITION OF erp.task_169 FOR VALUES FROM (105000000) TO (110000000);
CREATE TABLE IF NOT EXISTS erp.task_169000115000000 PARTITION OF erp.task_169 FOR VALUES FROM (110000000) TO (115000000);
CREATE TABLE IF NOT EXISTS erp.task_169000120000000 PARTITION OF erp.task_169 FOR VALUES FROM (115000000) TO (120000000);
CREATE TABLE IF NOT EXISTS erp.task_169000125000000 PARTITION OF erp.task_169 FOR VALUES FROM (120000000) TO (125000000);
CREATE TABLE IF NOT EXISTS erp.task_169000130000000 PARTITION OF erp.task_169 FOR VALUES FROM (125000000) TO (130000000);
CREATE TABLE IF NOT EXISTS erp.task_169000135000000 PARTITION OF erp.task_169 FOR VALUES FROM (130000000) TO (135000000);
CREATE TABLE IF NOT EXISTS erp.task_169000140000000 PARTITION OF erp.task_169 FOR VALUES FROM (135000000) TO (140000000);
CREATE TABLE IF NOT EXISTS erp.task_169000145000000 PARTITION OF erp.task_169 FOR VALUES FROM (140000000) TO (145000000);
CREATE TABLE IF NOT EXISTS erp.task_169000150000000 PARTITION OF erp.task_169 FOR VALUES FROM (145000000) TO (150000000);
CREATE TABLE IF NOT EXISTS erp.task_169000155000000 PARTITION OF erp.task_169 FOR VALUES FROM (150000000) TO (155000000);
CREATE TABLE IF NOT EXISTS erp.task_169000160000000 PARTITION OF erp.task_169 FOR VALUES FROM (155000000) TO (160000000);
CREATE TABLE IF NOT EXISTS erp.task_169000165000000 PARTITION OF erp.task_169 FOR VALUES FROM (160000000) TO (165000000);
CREATE TABLE IF NOT EXISTS erp.task_169000170000000 PARTITION OF erp.task_169 FOR VALUES FROM (165000000) TO (170000000);
CREATE TABLE IF NOT EXISTS erp.task_169000175000000 PARTITION OF erp.task_169 FOR VALUES FROM (170000000) TO (175000000);
CREATE TABLE IF NOT EXISTS erp.task_169000180000000 PARTITION OF erp.task_169 FOR VALUES FROM (175000000) TO (180000000);
CREATE TABLE IF NOT EXISTS erp.task_169000185000000 PARTITION OF erp.task_169 FOR VALUES FROM (180000000) TO (185000000);
CREATE TABLE IF NOT EXISTS erp.task_169000190000000 PARTITION OF erp.task_169 FOR VALUES FROM (185000000) TO (190000000);
CREATE TABLE IF NOT EXISTS erp.task_169000195000000 PARTITION OF erp.task_169 FOR VALUES FROM (190000000) TO (195000000);
CREATE TABLE IF NOT EXISTS erp.task_169000200000000 PARTITION OF erp.task_169 FOR VALUES FROM (195000000) TO (200000000);
CREATE TABLE IF NOT EXISTS erp.task_169000205000000 PARTITION OF erp.task_169 FOR VALUES FROM (200000000) TO (205000000);
CREATE TABLE IF NOT EXISTS erp.task_169000210000000 PARTITION OF erp.task_169 FOR VALUES FROM (205000000) TO (210000000);
CREATE TABLE IF NOT EXISTS erp.task_169000215000000 PARTITION OF erp.task_169 FOR VALUES FROM (210000000) TO (215000000);
CREATE TABLE IF NOT EXISTS erp.task_169000220000000 PARTITION OF erp.task_169 FOR VALUES FROM (215000000) TO (220000000);
CREATE TABLE IF NOT EXISTS erp.task_169000225000000 PARTITION OF erp.task_169 FOR VALUES FROM (220000000) TO (225000000);
CREATE TABLE IF NOT EXISTS erp.task_169000230000000 PARTITION OF erp.task_169 FOR VALUES FROM (225000000) TO (230000000);
CREATE TABLE IF NOT EXISTS erp.task_169000235000000 PARTITION OF erp.task_169 FOR VALUES FROM (230000000) TO (235000000);
CREATE TABLE IF NOT EXISTS erp.task_169000240000000 PARTITION OF erp.task_169 FOR VALUES FROM (235000000) TO (240000000);
CREATE TABLE IF NOT EXISTS erp.task_169000245000000 PARTITION OF erp.task_169 FOR VALUES FROM (240000000) TO (245000000);
CREATE TABLE IF NOT EXISTS erp.task_169000250000000 PARTITION OF erp.task_169 FOR VALUES FROM (245000000) TO (250000000);
CREATE TABLE IF NOT EXISTS erp.task_169000255000000 PARTITION OF erp.task_169 FOR VALUES FROM (250000000) TO (255000000);
CREATE TABLE IF NOT EXISTS erp.task_169000260000000 PARTITION OF erp.task_169 FOR VALUES FROM (255000000) TO (260000000);
CREATE TABLE IF NOT EXISTS erp.task_169000265000000 PARTITION OF erp.task_169 FOR VALUES FROM (260000000) TO (265000000);
CREATE TABLE IF NOT EXISTS erp.task_169000270000000 PARTITION OF erp.task_169 FOR VALUES FROM (265000000) TO (270000000);
CREATE TABLE IF NOT EXISTS erp.task_169000275000000 PARTITION OF erp.task_169 FOR VALUES FROM (270000000) TO (275000000);
CREATE TABLE IF NOT EXISTS erp.task_169000280000000 PARTITION OF erp.task_169 FOR VALUES FROM (275000000) TO (280000000);
CREATE TABLE IF NOT EXISTS erp.task_169000285000000 PARTITION OF erp.task_169 FOR VALUES FROM (280000000) TO (285000000);
CREATE TABLE IF NOT EXISTS erp.task_169000290000000 PARTITION OF erp.task_169 FOR VALUES FROM (285000000) TO (290000000);
CREATE TABLE IF NOT EXISTS erp.task_169000295000000 PARTITION OF erp.task_169 FOR VALUES FROM (290000000) TO (295000000);
CREATE TABLE IF NOT EXISTS erp.task_169000300000000 PARTITION OF erp.task_169 FOR VALUES FROM (295000000) TO (300000000);
--
-- Name: task_169_taskid_seq; Type: SEQUENCE; Schema: erp; Owner: -
--

CREATE SEQUENCE IF NOT EXISTS erp.task_169_taskid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: task_169_taskid_seq; Type: SEQUENCE OWNED BY; Schema: erp; Owner: -
--

ALTER SEQUENCE erp.task_169_taskid_seq OWNED BY erp.task_169.prescription_id;


--
-- Name: task_169 prescription_id; Type: DEFAULT; Schema: erp; Owner: -
--

ALTER TABLE erp.task_169 ALTER COLUMN prescription_id SET DEFAULT nextval('erp.task_169_taskid_seq'::regclass);


--
-- Name: task_169 task_169_pkey; Type: CONSTRAINT; Schema: erp; Owner: -
--
ALTER TABLE erp.task_169 DROP CONSTRAINT IF EXISTS task_169_pkey;
ALTER TABLE erp.task_169
    ADD CONSTRAINT task_169_pkey PRIMARY KEY (prescription_id);

-- create foreign key constraints for table task
ALTER TABLE erp.task_169 DROP CONSTRAINT IF EXISTS fk_task_169_key_blob_id;
ALTER TABLE erp.task_169 DROP CONSTRAINT IF EXISTS fk_medication_dispense_169_blob_id;
ALTER TABLE erp.task_169 ADD CONSTRAINT fk_task_169_key_blob_id FOREIGN KEY (task_key_blob_id) REFERENCES erp.blob (blob_id) ON DELETE RESTRICT;
ALTER TABLE erp.task_169 ADD CONSTRAINT fk_medication_dispense_169_blob_id FOREIGN KEY (medication_dispense_blob_id) REFERENCES erp.blob (blob_id) ON DELETE RESTRICT;



--
-- Name: auditevent_prescription_type_idx; Type: INDEX; Schema: erp; Owner: -
--

CREATE INDEX IF NOT EXISTS auditevent_prescription_type_idx ON erp.auditevent USING btree (prescription_type);


--
-- Name: communication_prescription_type_idx; Type: INDEX; Schema: erp; Owner: -
--

CREATE INDEX IF NOT EXISTS communication_prescription_type_idx ON erp.communication USING btree (prescription_type);


--
-- Name: task_169_kvnr_idx; Type: INDEX; Schema: erp; Owner: -
--

CREATE INDEX IF NOT EXISTS task_169_kvnr_idx ON erp.task_169 USING hash (kvnr_hashed);


--
-- Name: task_169_last_modified_idx; Type: INDEX; Schema: erp; Owner: -
--

CREATE INDEX IF NOT EXISTS task_169_last_modified_idx ON erp.task_169 USING btree (last_modified);


-- Updating tasks is required as the task progresses
GRANT UPDATE ON TABLE erp.task_169 TO role_proc_user;

COMMIT;
